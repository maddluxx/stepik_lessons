Тестируем в первую очередь именно необходимые для успешной покупки действия, т.к. именно в них заключается вся суть интернет-магазина.
У пользователя должна быть бесперебойная способность отдать свои деньги. Таких действий два: первое - "выбирай", второе - "хватай".

Страница 1 - Каталог товаров - http://selenium1py.pythonanywhere.com/ru/catalogue/
- Пользовательский сценарий 1.1 - Взаимодействие с каталогом
-- Тестовый сценарий 1.1.1 - Проверка листинга содержимого корня каталога
- Пользовательский сценарий 1.2 - Выбор товаров для заказа
-- Тестовый сценарий 1.2.1 - Проверка наполнения корзины товарами напрямую со страницы корня каталога

Страница 2 - Корзина - http://selenium1py.pythonanywhere.com/ru/basket/
- Пользовательский сценарий 2.1 - Взаимодействие с корзиной
-- Тестовый сценарий 2.1.0 - Проверка содержимого корзины //*бонус
-- Тестовый сценарий 2.1.1 - Изменение содержимого корзины
- Пользовательский сценарий 2.2 - Оформление заказа
-- Тестовый сценарий 2.2.1 - Оформление заказа без изменений и промокодов


Примечание: тестовые сценарии 2.1.1 и 2.2.1 целесообразно запускать после тестового сценария 1.2.1


Тестовый сценарий 1.1.1 - Проверка листинга содержимого корня каталога
Предусловия:
Нет
Шаги:
- Шаг 1, открыть страницу http://selenium1py.pythonanywhere.com/ru/ напрямую, ожидаемый результат - страница открылась успешно
- Шаг 2, клик по ссылке "Все товары", ожидаемый результат - открылась страница "/ru/catalogue/"
- Шаг 3, проверка содержимого первой страницы каталога, ожидаемый результат - 1-20 товаров на странице, у всех атрибуты: картинка, рейтинг, название, цена, статус наличия, кнопка "В Корзину" (если статус в наличии)
- Шаг 4, клик по кнопке "вперед" внизу страницы, ожидаемый результат - открылась страница "/ru/catalogue/?page=2"
- Шаг 5, проверка содержимого второй страницы каталога, ожидаемый результат - 1-20 товаров на странице, у всех атрибуты: картинка, рейтинг, название, цена, статус наличия, кнопка "В Корзину" (если статус в наличии)
- Шаг 6, клик по тайтлу первого встречного товара, ожидаемый результат - страница по ссылке открылась успешно


Тестовый сценарий 1.2.1 - Проверка наполнения корзины товарами напрямую со страницы корня каталога
Предусловия:
Начальное значение "Всего в корзине: 0,00 £", на странице имеются товары в наличии на складе.
Шаги:
- Шаг 1, открыть страницу http://selenium1py.pythonanywhere.com/ru/catalogue/ напрямую, ожидаемый результат - страница открылась успешно
- Шаг 2, клик по первой встречной кнопке "Добавить в корзину", ожидаемый результат - перезагрузка страницы с отображением алерта с текстом "Стоимость корзины теперь составляет"
- Шаг 3, сверяем значение поля "Всего в корзине: X £" со значением в тексте алерта "Стоимость корзины теперь составляет Y £", ожидаемый результат - значения совпадают
- Шаг 4, клик по второй встречной кнопке "Добавить в корзину", ожидаемый результат - перезагрузка страницы с отображением алерта с текстом "Стоимость корзины теперь составляет"
- Шаг 5, сверяем значение поля "Всего в корзине: X £" со значением в тексте алерта "Стоимость корзины теперь составляет Y £", ожидаемый результат - значения совпадают
- Шаг 6, клик по кнопке "Посмотреть корзину", ожидаемый результат - страница открылась успешно


Тестовый сценарий 2.1.0 - Проверка содержимого корзины
Предусловия:
У пользователя в корзине уже есть как минимум один товар.
Шаги:
- Шаг 1, открыть страницу http://selenium1py.pythonanywhere.com/ru/basket/, ожидаемый результат - страница открылась успешно
- Шаг 2, считаем сумму всех значений стоимостей товаров в столбце "Всего", ожидаемый результат - значение совпадает со значением "Всего в корзине (без скидок)"
- Шаг 3, считаем сумму "Всего в корзине (со скидками)" и цены доставки, ожидаемый результат - сумма совпадает с итоговым значением "Всего"


Тестовый сценарий 2.1.1 - Изменение содержимого корзины
Предусловия:
У пользователя в корзине уже есть как минимум один товар.
Шаги:
- Шаг 1, открыть страницу http://selenium1py.pythonanywhere.com/ru/basket/, ожидаемый результат - страница открылась успешно
- Шаг 2, проверка сценария 2.1.0
- Шаг 3, клик по ссылке "Удалить" первого встречного товара, ожидаемый результат - товар пропал со страницы //*сейчас это не работает, я нашёл вам баг
- Шаг 4, проверка сценария 2.1.0


Тестовый сценарий 2.2.1 - Оформление заказа без изменений и промокодов
Предусловия:
У пользователя в корзине уже есть как минимум один товар.
Шаги:
- Шаг 1, открыть страницу http://selenium1py.pythonanywhere.com/ru/basket/, ожидаемый результат - страница открылась успешно
- Шаг 2, клик по кнопке "Перейти к оформлению", ожидаемый результат - страница /ru/checkout/ открылась успешно
- Шаг 3, выбираем radio-button "Я новый пользователь и буду расплачиваться как гость", ожидаемый результат - выбор закрепился
- Шаг 4, вводим текст в поле "Мой адрес электронной почты: *", ожидаемый результат - текст введён
- Шаг 5, клик по кнопке "Продолжить", ожидаемый результат - показана страница подтверждения успешного оформления заказа //*сейчас это не работает, я нашёл вам баг